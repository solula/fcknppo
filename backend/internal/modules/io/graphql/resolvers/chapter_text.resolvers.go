package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"waterfall-backend/internal/modules/domain/chapter/dto"
)

// ChapterTextCreate is the resolver for the ChapterTextCreate field.
func (r *mutationResolver) ChapterTextCreate(ctx context.Context, chapterText dto.ChapterTextCreate) (*dto.ChapterText, error) {
	return r.services.ChapterText.Create(ctx, &chapterText)
}

// ChapterTextUpdate is the resolver for the ChapterTextUpdate field.
func (r *mutationResolver) ChapterTextUpdate(ctx context.Context, id string, chapterText dto.ChapterTextUpdate) (*dto.ChapterText, error) {
	return r.services.ChapterText.Update(ctx, id, &chapterText)
}

// ChapterTextDelete is the resolver for the ChapterTextDelete field.
func (r *mutationResolver) ChapterTextDelete(ctx context.Context, id string) (string, error) {
	err := r.services.ChapterText.Delete(ctx, id)
	if err != nil {
		return "", err
	}

	return id, nil
}

// ChapterTextGet is the resolver for the ChapterTextGet field.
func (r *queryResolver) ChapterTextGet(ctx context.Context, id string) (*dto.ChapterText, error) {
	return r.services.ChapterText.GetByUuid(ctx, id)
}
