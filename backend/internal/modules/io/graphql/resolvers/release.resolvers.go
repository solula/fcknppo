package resolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"waterfall-backend/internal/modules/domain/release/dto"
)

// ReleaseCreate is the resolver for the ReleaseCreate field.
func (r *mutationResolver) ReleaseCreate(ctx context.Context, release dto.ReleaseCreate) (*dto.Release, error) {
	return r.services.Release.Create(ctx, &release)
}

// ReleaseUpdate is the resolver for the ReleaseUpdate field.
func (r *mutationResolver) ReleaseUpdate(ctx context.Context, id string, release dto.ReleaseUpdate) (*dto.Release, error) {
	return r.services.Release.Update(ctx, id, &release)
}

// ReleaseDelete is the resolver for the ReleaseDelete field.
func (r *mutationResolver) ReleaseDelete(ctx context.Context, id string) (string, error) {
	err := r.services.Release.Delete(ctx, id)
	if err != nil {
		return "", err
	}

	return id, nil
}

// ReleaseGet is the resolver for the ReleaseGet field.
func (r *queryResolver) ReleaseGet(ctx context.Context, id string) (*dto.Release, error) {
	return r.services.Release.GetByUuid(ctx, id)
}

// ReleaseList is the resolver for the ReleaseList field.
func (r *queryResolver) ReleaseList(ctx context.Context) ([]*dto.Release, error) {
	return r.services.Release.List(ctx)
}
