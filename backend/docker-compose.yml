version: '3.3'

services:
  server:
    build:
      context: .
      dockerfile: ./server.Dockerfile
    container_name: server-waterfall-backend
    ports:
      - "8080:8080"
    env_file:
      - server.env
    depends_on:
      postgres:
        condition: service_healthy
      s3:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: ./worker.Dockerfile
    container_name: worker-waterfall-backend
    env_file:
      - worker.env
    depends_on:
      postgres:
        condition: service_healthy
      s3:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres-waterfall-backend
    environment:
      POSTGRES_PASSWORD: passw0rd
      PG_PASSWORD: passw0rd
      POSTGRES_DB: server_db
    volumes:
      - ./misc/postgres/docker:/docker-entrypoint-initdb.d/
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -p 5432" ]
      interval: 10s
      timeout: 5s
      retries: 5

  s3:
    image: bitnami/minio:latest
    container_name: s3-waterfall-backend
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    volumes:
      - s3-data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: [ "CMD-SHELL", "curl -I http://localhost:9000/minio/health/live" ]
      interval: 10s
      timeout: 5s
      retries: 5

  dozzle:
    container_name: dozzle-waterfall-backend
    image: amir20/dozzle:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9999:8080"

  redis:
    image: redis
    container_name: redis-waterfall-backend
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  s3-data: